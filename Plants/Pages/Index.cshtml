@page
@using System.Reflection;
@using Plants.Models.Dto;
@using System.Drawing;
@model IndexModel
@{
	ViewData["Title"] = "Home page";
}

<div class="container mt-5">
	<div class="card">
		<div class="card-header" id="filterHeader">
			<h5 class="mb-0">
				<button class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#filterContent">
					Filter
				</button>
				<a class="btn btn-link" href="/">Reset</a>
			</h5>
		</div>

		<div id="filterContent" class="@(Model.FilterIsApplied ? "show" : "collapse")">
			<div class="card-body">
				<form method="post">
					<div class="row mb-2" id="Name">
						<div class="col-2 d-flex align-items-center">
							Name
						</div>
						<div class="col-2">
							<input type="text" class="form-control" asp-for=Filter.Name value=@Model.Filter.Name placeholder="<enter a name>">
						</div>
					</div>
					<div class="row" id="FlowerColorCode">
						<div class="col-2 d-flex align-items-center">
							Flower Color
						</div>
						<div class="col-4">
							<div class="card p-2 bg-light">
								<div class="color-palette">
									<input type="radio" id="default" asp-for=Filter.FlowerColorCode value="-1">
									<label class="bg-light" title="Not selected" for="default">X</label>

									@for (int i = 1; i <= Model.ColorSet.Count; i++)
									{
										var clr = Model.ColorSet[i - 1];
										
										<input type="radio" id="@($"color{i}")" asp-for=Filter.FlowerColorCode value=@clr>
										<label for="@($"color{i}")" title="SomeColor" style="background-color: @ColorTranslator.ToHtml(Color.FromArgb(clr));"></label>
@*										<label for="@($"color{i}")" title="SomeColor" style="background-color: @($"#{clr:X6}");"></label>
*@									}
								</div>								
							</div>
						</div>
					</div>

					<div class="row" id="Poisonous">
						<div class="col-2">
							Poisonous
						</div>
						<div class="col-10">
							<label>
								<input type="radio" asp-for="Filter.Poisonous" value="true" checked="@(Model.Filter.Poisonous == true)">
								Yes
							</label>
							<label>
								<input type="radio" asp-for="Filter.Poisonous" value="false" checked="@(Model.Filter.Poisonous == false)">
								No
							</label>
							<label>
								<input type="radio" asp-for="Filter.Poisonous" value="" checked="@(Model.Filter.Poisonous == null)">
								Any
							</label>
						</div>
					</div>
					<div class="row" id="ForHerbalTea">
						<div class="col-2">
							For herbal tea
						</div>
						<div class="col-10">
							<label>
								<input type="radio" asp-for="Filter.ForHerbalTea" value="true" checked="@(Model.Filter.ForHerbalTea == true)">
								Yes
							</label>
							<label>
								<input type="radio" asp-for="Filter.ForHerbalTea" value="false" checked="@(Model.Filter.ForHerbalTea == false)">
								No
							</label>
							<label>
								<input type="radio" asp-for="Filter.ForHerbalTea" value="" checked="@(Model.Filter.ForHerbalTea == null)">
								Any
							</label>
						</div>
					</div>
					<div class="row" id="PickingProhibited">
						<div class="col-2">
							Picking is prohibited
						</div>
						<div class="col-10">
							<label>
								<input type="radio" asp-for="Filter.PickingProhibited" value="true" checked="@(Model.Filter.PickingProhibited == true)">
								Yes
							</label>
							<label>
								<input type="radio" asp-for="Filter.PickingProhibited" value="false" checked="@(Model.Filter.PickingProhibited == false)">
								No
							</label>
							<label>
								<input type="radio" asp-for="Filter.PickingProhibited" value="" checked="@(Model.Filter.PickingProhibited == null)">
								Any
							</label>
						</div>
					</div>
					<div class="row" id="Submit">
						<div class="col-1">
							<button type="submit" class="btn btn-primary mt-3">Apply</button>
						</div>
					</div>
				</form>
			</div>
		</div>
	</div>
</div>
<div class="container">
	<div class="row">
		@if (Model.TotalPages == 0)
		{
			<p>No items detected</p>
		}
		else
		{
			@foreach (var plant in Model.RequestedPlants)
			{
				<div class="col-4 ">
					<div class="p-0 my-3 border">
						<div class="card">
							<img src="@plant?.ImageLinks?.FirstOrDefault()?.ImageUrl" class="card-img-top fixed-card-img-top">
							<div class="card-body">
								@foreach (var pn in plant.Names.OrderBy(pn => pn.Language))
								{
									<h3 class="card-title text-success">@pn.Name</h3>
								}
								<p class="card-text">
									Poisonous:	@Model.NullBoolToString(plant.Poisonous)<br>
									For herbal tea: @Model.NullBoolToString(plant.ForHerbalTea)<br>
									Picking is prohibited: @Model.NullBoolToString(plant.PickingProhibited)
								</p>
							</div>
						</div>
					</div>
				</div>
			}
		}
	</div>
	<div class="row" id="TotalCount">
		<div class="col-4 ">
			Total plants: @Model.TotalCount
		</div>
	</div>

	<div class="row">
		<nav aria-label="Page navigation">
			<ul class="pagination">
				@{
					List<PropertyInfo> properties = Model.Filter.GetType().GetProperties().ToList();
				}
				<li class="page-item @(Model.HasPreviousPage ? "enabled" : "disabled")">
					<form asp-route-pageid="@(Model.PageId - 1)" method="post">
						<button type="submit" class="page-link">Previous</button>
						@foreach (var pi in properties)
						{
							<input type="hidden" name="@("Filter." + pi.Name)" value="@pi.GetValue(Model.Filter)?.ToString()" />
						}
					</form>
				</li>


				@for (int i = 1; i <= Model.TotalPages; i++)
				{
					<li class="page-item @(Model.PageId == i ? "active" : "")">
						<form asp-route-pageid="@i" method="post">
							<button type="submit" class="page-link">@i</button>
							@foreach (var pi in properties)
							{
								<input type="hidden" name="@("Filter." + pi.Name)" value="@pi.GetValue(Model.Filter)?.ToString()" />
							}
						</form>
					</li>
				}

				<li class="page-item @(Model.HasNextPage ? "enabled" : "disabled")">
					<form asp-route-pageid="@(Model.PageId + 1)" method="post">
						<button type="submit" class="page-link">Next</button>
						@foreach (var pi in properties)
						{
							<input type="hidden" name="@("Filter." + pi.Name)" value="@pi.GetValue(Model.Filter)?.ToString()" />
						}
					</form>
				</li>
			</ul>
		</nav>
	</div>
</div>